{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "InGame.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import { questionSets } from \"../stores\";\r\nimport MainMenu from \"./MainMenu.svelte\";\r\nimport InGame from \"./InGame.svelte\";\r\nimport PostGame from \"./PostGame.svelte\";\r\nimport { onMount } from \"svelte\";\r\nimport { fetchQuestions, selectQuestionsForGame } from \"../questions\";\r\n;\r\nonMount(async () => {\r\n    $questionSets = {\r\n        default: selectQuestionsForGame(await fetchQuestions(\"БГ 1-6\"), 8, []),\r\n    };\r\n});\r\nlet gameStage = \"MAIN-MENU\";\r\nlet selectedQuestions;\r\nlet gameResult;\r\nconst startGame = ({ detail }) => {\r\n    selectedQuestions = $questionSets[detail?.selectedQuestionSet || \"default\"];\r\n    gameStage = \"IN-GAME\";\r\n};\r\nconst endGame = ({ detail }) => {\r\n    gameResult = detail;\r\n    gameStage = \"POST-GAME\";\r\n};\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    text-align: center;\r\n    padding: 1em;\r\n    max-width: 240px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  h1 {\r\n    color: #ff3e00;\r\n    text-transform: uppercase;\r\n    font-size: 4em;\r\n    font-weight: 100;\r\n  }\r\n\r\n  @media (min-width: 640px) {\r\n    main {\r\n      max-width: none;\r\n    }\r\n  }\r\n</style>\r\n\r\n<main>\r\n  {#if gameStage === 'IN-GAME'}\r\n    <InGame {selectedQuestions} on:endGame={endGame} />\r\n  {:else if gameStage === 'POST-GAME'}\r\n    <PostGame {gameResult} on:playAgain={startGame} />\r\n  {:else}\r\n    <MainMenu on:startGame={startGame} />\r\n  {/if}\r\n</main>\r\n",
    "<script lang=\"ts\">;\r\nimport { createEventDispatcher } from \"svelte\";\r\nconst dispatch = createEventDispatcher();\r\nexport let selectedQuestions;\r\nlet currentQuestionNumber = 1;\r\nlet currentQuestion = selectedQuestions[0];\r\nconsole.log(selectedQuestions);\r\nconst handleChoice = (e) => {\r\n    if (`choice-${currentQuestion.correctAnswerId}` !== e.target.id) {\r\n        dispatch(\"endGame\", {\r\n            win: false,\r\n            failedQuestion: currentQuestion,\r\n            questionNumber: currentQuestionNumber,\r\n        });\r\n        return;\r\n    }\r\n    if (currentQuestionNumber === selectedQuestions.length) {\r\n        dispatch(\"endGame\", {\r\n            win: true,\r\n        });\r\n        return;\r\n    }\r\n    currentQuestion = selectedQuestions[currentQuestionNumber];\r\n    currentQuestionNumber += 1;\r\n};\r\n</script>\r\n\r\n<style>\r\n  pre {\r\n    color: orange;\r\n  }\r\n</style>\r\n\r\n<div>\r\n  <pre>Вопрос #{currentQuestionNumber}</pre>\r\n  <pre>{currentQuestion.questionText}</pre>\r\n  {#each currentQuestion.answerChoices as choice}\r\n    <button\r\n      on:click={handleChoice}\r\n      id=\"choice-{choice.id}\">{choice.value}</button>\r\n  {/each}\r\n</div>\r\n"
  ],
  "names": [],
  "mappings": "AA0BE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AASD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC;AChBD,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,MAAM,AACf,CAAC"
}