{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "InGame.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { questionSets } from \"../stores\";\nimport MainMenu from \"./MainMenu.svelte\";\nimport InGame from \"./InGame.svelte\";\nimport PostGame from \"./PostGame.svelte\";\nimport { onMount } from \"svelte\";\nimport { fetchQuestions, questionRanges } from \"../questions\";\n;\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\n    $questionSets = { default: yield fetchQuestions(questionRanges.default) };\n    console.log($questionSets);\n}));\nlet gameStage = \"MAIN-MENU\";\nlet selectedQuestions;\nlet gameResult;\nconst startGame = ({ detail }) => {\n    selectedQuestions = $questionSets[detail.selectedQuestionSet];\n    gameStage = \"IN-GAME\";\n};\nconst endGame = ({ detail }) => {\n    gameResult = detail;\n    gameStage = \"POST-GAME\";\n};\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<main>\n  {#if gameStage === 'IN-GAME'}\n    <InGame {selectedQuestions} on:endGame={endGame} />\n  {:else if gameStage === 'POST-GAME'}\n    <PostGame {gameResult} />\n  {:else}\n    <MainMenu on:startGame={startGame} />\n  {/if}\n</main>\n",
    "<script lang=\"ts\">;\nimport { createEventDispatcher } from \"svelte\";\nconst dispatch = createEventDispatcher();\nexport let selectedQuestions;\nlet currentQuestion = selectedQuestions.shift();\nlet currentQuestionNumber = 1;\nconst handleChoice = (e) => {\n    if (`choice-${currentQuestion.correctAnswerId}` !== e.target.id) {\n        dispatch(\"endGame\", {\n            win: false,\n            currentQuestion,\n        });\n        return;\n    }\n    if (0 === selectedQuestions.length) {\n        dispatch(\"endGame\", {\n            win: true,\n        });\n        return;\n    }\n    currentQuestion = selectedQuestions.shift();\n};\n</script>\n\n<style>\n  pre {\n    color: orange;\n  }\n</style>\n\n<div>\n  <pre>{currentQuestionNumber++ + ': ' + currentQuestion.questionText}</pre>\n  {#each currentQuestion.answerChoices as choice}\n    <button on:click={handleChoice} id=\"choice-{choice.id}\">{choice.value}</button>\n  {/each}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAkCE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AASD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC;AC3BD,GAAG,eAAC,CAAC,AACH,KAAK,CAAE,MAAM,AACf,CAAC"
}